import java.util.concurrent.BlockingQueue;

/*
*
*
* 阻塞队列是一个队列，先进先出，线程1往阻塞队列里添加元素，线程2从阻塞队列里移除元素
* 必须阻塞要（生产者模式）/不得不阻塞（多线程）
* 当队列是空的，从队列中获取元素的操作将会被阻塞
  当队列是满的，从队列中添加元素的操作将会被阻塞
  试图从空的队列中获取元素的线程将会被阻塞，直到其他线程往空的队列插入新的元素
  试图向已满的队列中添加新元素的线程将会被阻塞，直到其他线程从队列中移除一个或多个元素或者完全清空，
  使队列变得空闲起来并后续新增
 阻塞对列的作用
  在多线程领域：所谓阻塞，在某些情况下会挂起线程（即阻塞），一旦条件满足，被挂起的线程又会自动被唤起
  好处是我们不需要关心什么时候需要阻塞线程，什么时候需要唤醒线程，因为这一切BlockingQueue都给你一手包办了

* */
public class BlockingQueueDemo {

}
